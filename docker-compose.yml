services:
  db:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mysecretpassword
      POSTGRES_DB: duplicatefinder
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - 5433:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d duplicatefinder"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
    command: >
      uvicorn backend.main:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - .:/app
    working_dir: /app
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - PYTHONPATH=/app
      - DATABASE_URL=postgresql+psycopg2://postgres:mysecretpassword@db:5432/duplicatefinder
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_BACKEND_URL=redis://redis:6379/1

    depends_on:
      - db

  redis:
    image: redis:7
    restart: always

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A backend.services.worker.celery_app worker --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - app
      - redis
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql+psycopg2://postgres:mysecretpassword@db:5432/duplicatefinder
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_BACKEND_URL=redis://redis:6379/1

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    command: pnpm dev -- -H 0.0.0.0 -p 3000
    working_dir: /app/frontend
    volumes:
      - ./frontend:/app/frontend
    ports:
      - "3000:3000"
    env_file:
      - .env
    environment:
      - NEXT_TELEMETRY_DISABLED=1
    depends_on:
      - app

volumes:
  postgres_data:
