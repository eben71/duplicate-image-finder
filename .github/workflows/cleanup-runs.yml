name: Cleanup Workflow Runs

on:
  workflow_dispatch:

permissions:
  actions: write     # needed for DELETE /actions/runs/{id}
  contents: read

jobs:
  cleanup:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Ensure GitHub CLI is available
        run: gh --version || (sudo apt-get update && sudo apt-get install -y gh && gh --version)

      - name: Verify gh authentication
        run: gh auth status

      - name: Collect candidate run IDs (non-main, completed)
        env:
          REPO: ${{ github.repository }}
        run: |
          N=10  # how many to keep per branch
          gh run list \
            --repo "$REPO" \
            --limit 1000 \
            --json databaseId,headBranch,createdAt,status \
          | jq -r '
              map(select(.headBranch != "main" and .headBranch != null and .status == "completed"))
            | group_by(.headBranch)[]
            | sort_by(.createdAt) | reverse
            | .[N:]  # drop the newest N, keep the older ones (to delete)
            | .[].databaseId' \
          | tee run_ids.txt

          echo "Found $(wc -l < run_ids.txt) runs to delete."

      - name: Delete runs (one by one with logging)
        if: ${{ hashFiles('run_ids.txt') != '' }}
        env:
          REPO: ${{ github.repository }}
        run: |
          if [ -s run_ids.txt ]; then
            while read -r id; do
              echo "Deleting run $id..."
              # Add -v for verbose HTTP if you need to debug (shows 2xx/4xx)
              gh api -X DELETE "repos/$REPO/actions/runs/$id"
            done < run_ids.txt
          else
            echo "No runs to delete."
          fi
